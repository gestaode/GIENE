import { log } from "../vite";
import { OpenAIService } from "./openai";
import { MistralAIService } from "./mistral";
import { HuggingFaceService } from "./huggingface";
import { GoogleCloudTTSService } from "./google-cloud-tts";
import fs from "fs";
import path from "path";
import { spawn } from "child_process";
import { FFmpegService } from "./ffmpeg";

/**
 * Servi√ßo de fallback local que n√£o depende de APIs externas
 * Usado como √∫ltimo recurso quando todas as outras op√ß√µes falham
 */
export class LocalFallbackService {
  constructor() {
    log("Inicializando servi√ßo de fallback local", "local-fallback");
    // Verificar e criar diret√≥rios necess√°rios
    this.ensureDirectoriesExist();
  }

  /**
   * Garante que os diret√≥rios necess√°rios existam
   */
  private ensureDirectoriesExist() {
    const dirs = [
      "./fallback-cache",
      "./fallback-cache/scripts",
      "./fallback-cache/audio",
      "./fallback-cache/images"
    ];

    for (const dir of dirs) {
      if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir, { recursive: true });
      }
    }
  }

  /**
   * M√©todo de fallback para gera√ß√£o de scripts de v√≠deo
   * Retorna um script pr√©-definido ou gera um baseado em templates quando todas as APIs falham
   */
  async generateVideoScript(options: any): Promise<{
    title: string;
    script: string;
    suggestedKeywords: string[];
    videoLengthSeconds: number;
  }> {
    log("Usando gerador de scripts local de fallback", "local-fallback");
    
    const themes = [
      "Marketing Digital",
      "Vendas Online",
      "Estrat√©gias de Neg√≥cios",
      "Empreendedorismo",
      "Transforma√ß√£o Digital"
    ];
    
    // Use o tema fornecido ou escolha um aleatoriamente
    const theme = options.theme || themes[Math.floor(Math.random() * themes.length)];
    
    // Templates de scripts pr√©-definidos
    const scriptTemplates = [
      {
        title: `5 Estrat√©gias Essenciais para ${theme}`,
        script: `Ol√°! Hoje vou compartilhar 5 estrat√©gias essenciais para ter sucesso com ${theme}.

Primeiro, √© fundamental conhecer seu p√∫blico-alvo e entender suas necessidades espec√≠ficas.

Segundo, desenvolva uma presen√ßa online consistente e profissional que reflita os valores da sua marca.

Terceiro, crie conte√∫do relevante e de valor que resolva problemas reais do seu p√∫blico.

Quarto, use an√°lise de dados para tomar decis√µes baseadas em informa√ß√µes concretas, n√£o em suposi√ß√µes.

Por √∫ltimo, esteja sempre atualizado com as tend√™ncias do mercado e adapte suas estrat√©gias conforme necess√°rio.

Implemente essas cinco estrat√©gias e voc√™ ver√° resultados significativos em pouco tempo!`,
        keywords: ["estrat√©gias", theme.toLowerCase(), "sucesso", "neg√≥cios", "crescimento"],
        length: 45
      },
      {
        title: `Como Revolucionar Seu Neg√≥cio com ${theme}`,
        script: `Voc√™ quer revolucionar seu neg√≥cio usando ${theme}? Neste v√≠deo, vou mostrar exatamente como fazer isso.

O mercado est√° mudando rapidamente, e as empresas que n√£o se adaptam ficam para tr√°s. ${theme} √© a chave para se manter competitivo.

Muitos empreendedores cometem o erro de ignorar o poder do ${theme} at√© que seja tarde demais.

Com a metodologia certa, voc√™ pode implementar ${theme} em seu neg√≥cio de forma eficaz e econ√¥mica.

Os resultados falam por si: empresas que investem em ${theme} veem um aumento m√©dio de 30% em seus resultados.

N√£o perca mais tempo! Comece hoje mesmo a transformar seu neg√≥cio com ${theme}.`,
        keywords: [theme.toLowerCase(), "transforma√ß√£o", "resultados", "neg√≥cios", "crescimento"],
        length: 40
      },
      {
        title: `O Segredo do ${theme} que Ningu√©m te Conta`,
        script: `Existe um segredo sobre ${theme} que poucos profissionais conhecem, e hoje vou revelar para voc√™.

A maioria das pessoas aborda ${theme} da maneira errada, focando apenas nos aspectos superficiais.

O verdadeiro poder do ${theme} est√° na consist√™ncia e na estrat√©gia de longo prazo.

Enquanto seus concorrentes est√£o seguindo tend√™ncias passageiras, voc√™ pode construir uma base s√≥lida.

Este segredo transformou completamente os resultados dos meus clientes, com aumentos de at√© 250% em seus retornos.

Se voc√™ implementar o que aprender√° hoje, seu neg√≥cio nunca mais ser√° o mesmo. Vamos come√ßar!`,
        keywords: ["segredo", theme.toLowerCase(), "estrat√©gia", "resultados", "transforma√ß√£o"],
        length: 35
      }
    ];
    
    // Selecionar um template aleat√≥rio
    const selectedTemplate = scriptTemplates[Math.floor(Math.random() * scriptTemplates.length)];
    
    // Adicionar um identificador √∫nico de fallback para rastreamento
    const template = {
      title: selectedTemplate.title,
      script: selectedTemplate.script,
      suggestedKeywords: selectedTemplate.keywords,
      videoLengthSeconds: selectedTemplate.length,
      _fallback: true
    };
    
    // Salvar em cache para refer√™ncia futura
    const cacheFile = path.join("./fallback-cache/scripts", `script_${Date.now()}.json`);
    fs.writeFileSync(cacheFile, JSON.stringify(template, null, 2));
    
    log(`Script de fallback gerado e salvo em ${cacheFile}`, "local-fallback");
    
    return template;
  }
  
  /**
   * M√©todo de fallback para gera√ß√£o de conte√∫do para redes sociais
   */
  async generateSocialMediaContent(scriptText: string, options: any): Promise<{
    instagram: string;
    facebook: string;
    twitter: string;
    tiktok: string;
    hashtags: string[];
  }> {
    log("Usando gerador de conte√∫do social local de fallback", "local-fallback");
    
    // Extrair palavras-chave do texto do script
    const words = scriptText.toLowerCase().split(/\s+/);
    const commonWords = new Set(["a", "o", "e", "de", "da", "do", "para", "com", "em", "um", "uma", "que", "seu", "sua"]);
    const keywords = [...new Set(words.filter(w => w.length > 3 && !commonWords.has(w)))].slice(0, 5);
    
    // Gerar hashtags baseadas nas palavras-chave
    const hashtags = keywords.map(k => `#${k}`);
    
    // Extrair uma frase impactante do script (primeira ou segunda frase)
    const sentences = scriptText.split(/[.!?]+/).filter(s => s.trim().length > 0);
    const impactSentence = sentences.length > 1 ? sentences[1].trim() : sentences[0].trim();
    
    // Extrair t√≠tulo (primeira linha do script)
    const firstLine = sentences[0].trim();
    
    // Gerar conte√∫dos espec√≠ficos para cada plataforma
    const instagram = `‚ú® ${firstLine} ‚ú®\n\n${impactSentence}\n\nLeia mais no link da bio!\n\n${hashtags.join(" ")}`;
    
    const facebook = `${firstLine}\n\n${scriptText.substring(0, Math.min(scriptText.length, 200))}...\n\nClique abaixo para assistir o v√≠deo completo e descobrir mais!\n\n${hashtags.slice(0, 3).join(" ")}`;
    
    const twitter = `${impactSentence.substring(0, Math.min(impactSentence.length, 180))}...\n\n${hashtags.slice(0, 2).join(" ")}`;
    
    const tiktok = `${firstLine} üî•\n\n${hashtags.join(" ")}`;
    
    const result = {
      instagram,
      facebook,
      twitter,
      tiktok,
      hashtags,
      _fallback: true
    };
    
    // Salvar em cache para refer√™ncia futura
    const cacheFile = path.join("./fallback-cache/scripts", `social_${Date.now()}.json`);
    fs.writeFileSync(cacheFile, JSON.stringify(result, null, 2));
    
    log(`Conte√∫do social de fallback gerado e salvo em ${cacheFile}`, "local-fallback");
    
    return result;
  }
  
  /**
   * M√©todo de fallback para sugest√£o de t√≥picos em tend√™ncia
   */
  async suggestTrendingTopics(theme: string, count: number = 5): Promise<string[]> {
    log("Usando gerador de t√≥picos em tend√™ncia local de fallback", "local-fallback");
    
    const trendingTopicsMap: Record<string, string[]> = {
      "marketing digital": [
        "Marketing de Conte√∫do para Pequenas Empresas",
        "Estrat√©gias de SEO para 2025",
        "Como Usar o TikTok para Neg√≥cios",
        "Automa√ß√£o de Marketing para Iniciantes",
        "Email Marketing que Converte",
        "Intelig√™ncia Artificial no Marketing",
        "Estrat√©gias de Marketing para E-commerce",
        "Psicologia do Consumidor Online",
        "Como Criar uma Comunidade Engajada",
        "An√°lise de Dados para Decis√µes de Marketing"
      ],
      "vendas": [
        "T√©cnicas de Vendas Consultivas",
        "Como Construir um Funil de Vendas Eficiente",
        "Obje√ß√µes de Vendas: Como Superar",
        "Vendas por WhatsApp: Estrat√©gias que Funcionam",
        "Psicologia da Persuas√£o em Vendas",
        "Vendas B2B no Ambiente Digital",
        "Como Aumentar o Ticket M√©dio",
        "Scripts de Vendas que Convertem",
        "Negocia√ß√£o Avan√ßada para Vendedores",
        "Como Qualificar Leads Efetivamente"
      ],
      "neg√≥cios": [
        "Modelos de Neg√≥cios Escal√°veis",
        "Como Criar um Plano de Neg√≥cios Efetivo",
        "Gest√£o Financeira para Empreendedores",
        "Estrat√©gias de Precifica√ß√£o",
        "Como Validar uma Ideia de Neg√≥cio",
        "Capta√ß√£o de Investimentos para Startups",
        "Modelos de Receita Recorrente",
        "Gest√£o de Equipes Remotas",
        "Parcerias Estrat√©gicas para Crescimento",
        "Internacionaliza√ß√£o de Pequenos Neg√≥cios"
      ],
      "empreendedorismo": [
        "Como Empreender com Pouco Capital",
        "Mentalidade do Empreendedor de Sucesso",
        "Da Ideia ao Neg√≥cio em 60 Dias",
        "Erros Fatais que Empreendedores Cometem",
        "Como Equilibrar Vida Pessoal e Empreendedorismo",
        "Bootstrapping: Crescendo sem Investimento Externo",
        "Storytelling para Empreendedores",
        "Produtividade para Fundadores",
        "Como Encontrar um Co-fundador Ideal",
        "Desenvolvendo Resili√™ncia Empreendedora"
      ],
      "tecnologia": [
        "Intelig√™ncia Artificial para Pequenas Empresas",
        "Blockchain Al√©m das Criptomoedas",
        "Automa√ß√£o de Processos com Low Code",
        "Ciberseguran√ßa para Neg√≥cios Digitais",
        "Realidade Aumentada no Com√©rcio Eletr√¥nico",
        "Edge Computing: O Futuro da Computa√ß√£o",
        "Tecnologias Verdes para Empresas",
        "Transforma√ß√£o Digital Passo a Passo",
        "Internet das Coisas em Aplica√ß√µes Comerciais",
        "5G e o Impacto nos Neg√≥cios"
      ]
    };
    
    // Normalizar tema para busca no mapa
    const normalizedTheme = theme.toLowerCase();
    
    // Encontrar a categoria mais pr√≥xima se n√£o houver correspond√™ncia exata
    let topics: string[] = [];
    let bestCategory = "";
    let bestScore = 0;
    
    for (const category in trendingTopicsMap) {
      if (category === normalizedTheme) {
        // Correspond√™ncia exata
        topics = [...trendingTopicsMap[category]];
        break;
      }
      
      // Verificar se o tema cont√©m ou est√° contido na categoria
      if (category.includes(normalizedTheme) || normalizedTheme.includes(category)) {
        const score = Math.min(category.length, normalizedTheme.length) / 
                      Math.max(category.length, normalizedTheme.length);
        
        if (score > bestScore) {
          bestScore = score;
          bestCategory = category;
        }
      }
    }
    
    // Usar a melhor categoria encontrada se n√£o houver correspond√™ncia exata
    if (topics.length === 0 && bestCategory) {
      topics = [...trendingTopicsMap[bestCategory]];
    }
    
    // Fallback gen√©rico se nenhuma categoria for encontrada
    if (topics.length === 0) {
      topics = [
        `5 Estrat√©gias de ${theme} para 2025`,
        `Como Usar ${theme} para Aumentar Vendas`,
        `${theme} para Iniciantes: Guia Completo`,
        `Tend√™ncias de ${theme} que Voc√™ Precisa Conhecer`,
        `O Futuro do ${theme} nos Pr√≥ximos Anos`,
        `${theme} Avan√ßado: T√©cnicas Profissionais`,
        `Case de Sucesso: ${theme} na Pr√°tica`,
        `Ferramentas Essenciais para ${theme}`,
        `Erros Comuns em ${theme} e Como Evitar`,
        `${theme} vs M√©todos Tradicionais: O Que Funciona Melhor?`
      ];
    }
    
    // Embaralhar e limitar ao n√∫mero solicitado
    const shuffled = topics.sort(() => 0.5 - Math.random());
    const selected = shuffled.slice(0, count);
    
    // Salvar em cache para refer√™ncia futura
    const result = {
      theme,
      topics: selected,
      _fallback: true
    };
    
    const cacheFile = path.join("./fallback-cache/scripts", `topics_${Date.now()}.json`);
    fs.writeFileSync(cacheFile, JSON.stringify(result, null, 2));
    
    log(`T√≥picos em tend√™ncia de fallback gerados e salvos em ${cacheFile}`, "local-fallback");
    
    return selected;
  }
  
  /**
   * Sintetiza texto em fala usando um processo local se poss√≠vel,
   * ou gera um arquivo de √°udio simples como fallback
   */
  async synthesizeSpeech(text: string, language: string = "pt-BR"): Promise<Buffer> {
    log("Usando sintetizador de fala local de fallback", "local-fallback");
    
    // Nome de arquivo √∫nico baseado no hash do texto
    const textHash = Buffer.from(text).toString('base64').replace(/[/+=]/g, '').substring(0, 10);
    const outputPath = path.join("./fallback-cache/audio", `speech_${textHash}.mp3`);
    
    // Verificar se j√° temos este texto em cache
    if (fs.existsSync(outputPath)) {
      log(`Usando arquivo de √°udio em cache: ${outputPath}`, "local-fallback");
      return fs.readFileSync(outputPath);
    }
    
    // Tentar usar espeak se dispon√≠vel no sistema
    try {
      await this.generateAudioWithEspeak(text, outputPath, language);
      return fs.readFileSync(outputPath);
    } catch (error) {
      log(`Espeak falhou, usando arquivo de √°udio de fallback gen√©rico`, "local-fallback");
      
      // Se espeak falhar, copiar um arquivo de √°udio gen√©rico pr√©-gravado
      const genericAudioPath = path.join("./fallback-cache/audio", "generic_speech.mp3");
      
      // Se n√£o tivermos nem mesmo o arquivo gen√©rico, criar um vazio
      if (!fs.existsSync(genericAudioPath)) {
        this.createEmptyAudioFile(genericAudioPath);
      }
      
      // Copiar o arquivo gen√©rico para o caminho esperado
      fs.copyFileSync(genericAudioPath, outputPath);
      return fs.readFileSync(outputPath);
    }
  }
  
  /**
   * Tenta gerar √°udio usando espeak (se dispon√≠vel no sistema)
   */
  private async generateAudioWithEspeak(text: string, outputPath: string, language: string): Promise<void> {
    return new Promise((resolve, reject) => {
      // Verificar lingua para espeak
      const langMap: Record<string, string> = {
        "pt-BR": "pt-br",
        "en-US": "en-us",
        "es-ES": "es",
        "fr-FR": "fr",
        "de-DE": "de",
        "it-IT": "it"
      };
      
      const espeakLang = langMap[language] || "pt-br";
      
      // Arquivo WAV tempor√°rio (espeak gera WAV)
      const tempWavPath = outputPath.replace(".mp3", ".wav");
      
      // Executar espeak para gerar o arquivo WAV
      const espeakProcess = spawn("espeak", [
        "-v", espeakLang,
        "-f", "-", // ler do stdin
        "-w", tempWavPath
      ]);
      
      espeakProcess.stdin.write(text);
      espeakProcess.stdin.end();
      
      espeakProcess.on("error", (error) => {
        log(`Erro ao executar espeak: ${error.message}`, "local-fallback");
        reject(error);
      });
      
      espeakProcess.on("close", (code) => {
        if (code !== 0) {
          return reject(new Error(`espeak saiu com c√≥digo ${code}`));
        }
        
        // Converter WAV para MP3 usando FFmpeg
        const ffmpegService = new FFmpegService();
        
        ffmpegService.convertAudioFormat(tempWavPath, outputPath, "mp3")
          .then(() => {
            // Remover arquivo WAV tempor√°rio
            if (fs.existsSync(tempWavPath)) {
              fs.unlinkSync(tempWavPath);
            }
            resolve();
          })
          .catch(reject);
      });
    });
  }
  
  /**
   * Cria um arquivo de √°udio vazio/gen√©rico como √∫ltimo recurso
   */
  private createEmptyAudioFile(filePath: string): void {
    // Criar um diret√≥rio pai se n√£o existir
    const dir = path.dirname(filePath);
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
    }
    
    // Preencher com um arquivo de √°udio m√≠nimo (1 segundo de sil√™ncio)
    const ffmpegService = new FFmpegService();
    
    try {
      ffmpegService.createSilentAudio(filePath, 1)
        .catch(error => {
          log(`Erro ao criar √°udio silencioso: ${error.message}`, "local-fallback");
          // Como √∫ltimo recurso, criar um arquivo vazio
          fs.writeFileSync(filePath, Buffer.alloc(0));
        });
    } catch (error) {
      log(`Erro ao inicializar FFmpeg: ${error instanceof Error ? error.message : String(error)}`, "local-fallback");
      // Como √∫ltimo recurso, criar um arquivo vazio
      fs.writeFileSync(filePath, Buffer.alloc(0));
    }
  }
}

// Inst√¢ncia singleton
export const localFallbackService = new LocalFallbackService();